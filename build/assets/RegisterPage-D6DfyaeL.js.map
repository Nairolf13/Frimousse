{"version":3,"file":"RegisterPage-D6DfyaeL.js","sources":["../../pages/RegisterPage.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from \"react\";\n\nconst API_URL = import.meta.env.VITE_API_URL || \"\";\n\ntype FormType = {\n  email: string;\n  password: string;\n  name: string;\n  role: string;\n  centerName: string;\n  address: string;\n  city: string;\n  postalCode: string;\n  region: string;\n  country: string;\n};\n\ntype Country = { name: string; cca2?: string; cca3?: string; region?: string };\n\n// Geodata place shape returned by our backend proxy (/api/geodata/positionstack)\ntype GeodataPlace = {\n  id?: string | number;\n  name?: string; // human readable label\n  lat?: number | null;\n  lon?: number | null;\n  // mapped fields from PositionStack proxy\n  street?: string | null;\n  house_number?: string | null;\n  city?: string | null;\n  state?: string | null;\n  country?: string | null;\n  postcode?: string | null;\n  raw?: unknown;\n};\n\nexport default function RegisterPage() {\n  // helper: safely extract country_code from unknown raw payload\n  const getRawCountryCode = (raw: unknown): string | null => {\n    if (!raw || typeof raw !== 'object') return null;\n    try {\n      const r = raw as Record<string, unknown>;\n      const cc = r['country_code'] || r['country_code'.toString()];\n      if (!cc) return null;\n      return String(cc).toUpperCase();\n    } catch (e) {\n      console.error('getRawCountryCode error', e);\n      return null;\n    }\n  };\n\n  const [form, setForm] = useState<FormType>({\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    role: \"admin\",\n    centerName: \"\",\n    address: \"\",\n    city: \"\",\n    postalCode: \"\",\n    region: \"\",\n    country: \"\",\n  });\n\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n\n  // data sources & suggestions\n  const [countries, setCountries] = useState<Country[]>([]);\n  const [countrySuggestions, setCountrySuggestions] = useState<\n    Array<{ name: string }>\n  >([]);\n  const [selectedCountryCode, setSelectedCountryCode] = useState<string | null>(\n    null\n  );\n\n  const [regionSuggestions, setRegionSuggestions] = useState<string[]>([]);\n  const [placeSuggestions, setPlaceSuggestions] = useState<GeodataPlace[]>([]);\n  const [citySuggestions, setCitySuggestions] = useState<GeodataPlace[]>([]);\n\n  const [openCountry, setOpenCountry] = useState(false);\n  const [openRegion, setOpenRegion] = useState(false);\n  const [openCity, setOpenCity] = useState(false);\n  const [openAddress, setOpenAddress] = useState(false);\n\n  \n  const searchTimer = useRef<number | null>(null);\n\n  const containerRef = useRef<HTMLDivElement | null>(null);\n\n  const updateForm = (patch: Partial<FormType>) =>\n    setForm((prev) => ({ ...prev, ...patch }));\n\n  const applyAndFocus = (name: keyof FormType, value: string) => {\n    updateForm({ [name]: value } as Partial<FormType>);\n    setTimeout(() => {\n      try {\n        const el = document.querySelector(\n          `input[name=\"${name}\"]`\n        ) as HTMLInputElement | null;\n        if (el) {\n          el.focus();\n          const len = el.value ? el.value.length : 0;\n          el.setSelectionRange(len, len);\n        }\n      } catch (err) {\n        console.error('applyAndFocus error:', err);\n      }\n    }, 0);\n  };\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\n  ) => {\n    if (e.target.name === \"role\") return;\n    const name = e.target.name as keyof FormType;\n    const value = e.target.value;\n    updateForm({ [name]: value });\n    console.debug('[geodata] handleChange', name, value);\n\n    if (name === \"country\") { setOpenCountry(true); console.debug('[geodata] openCountry'); }\n    if (name === \"region\") { setOpenRegion(true); console.debug('[geodata] openRegion'); }\n    if (name === \"city\") { setOpenCity(true); console.debug('[geodata] openCity'); }\n    if (name === \"address\") { setOpenAddress(true); console.debug('[geodata] openAddress'); }\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await fetch(\"/api/geodata/countries\");\n        if (!res.ok) return;\n        const data = (await res.json()) as Country[];\n        setCountries(data || []);\n      } catch (err) {\n        console.error(\"Failed to load countries\", err);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (!form.country) {\n      setCountrySuggestions([]);\n      setSelectedCountryCode(null);\n      return;\n    }\n    const q = form.country.toLowerCase();\n    const matches = countries\n      .filter((c) => c.name && c.name.toLowerCase().includes(q))\n      .slice(0, 8)\n      .map((c) => ({ name: c.name }));\n    setCountrySuggestions(matches);\n\n    const exact =\n      countries.find((c) => c.name === form.country) ||\n      countries.find((c) => c.name && c.name.toLowerCase() === q);\n    if (exact && exact.cca2) {\n      setSelectedCountryCode(String(exact.cca2).toUpperCase());\n    } else {\n      const matching = countries.filter(\n        (c) => c.name && c.name.toLowerCase().includes(q)\n      );\n      if (matching.length === 1 && matching[0].cca2) {\n        setSelectedCountryCode(String(matching[0].cca2).toUpperCase());\n      } else {\n        const starts = countries.find(\n          (c) => c.name && c.name.toLowerCase().startsWith(q)\n        );\n        setSelectedCountryCode(\n          starts && starts.cca2 ? String(starts.cca2).toUpperCase() : null\n        );\n      }\n    }\n  }, [form.country, countries]);\n\n  const fetchGeodata = useCallback(\n    async (query: string) => {\n      console.debug('[geodata] fetchGeodata query=', query);\n      if (!query || query.length < 2) {\n        setPlaceSuggestions([]);\n        setCitySuggestions([]);\n        return;\n      }\n      try {\n        const res = await fetch(\n          `/api/geodata/positionstack?q=${encodeURIComponent(query)}&limit=12`\n        );\n        console.debug('[geodata] backend status', res.status);\n        if (!res.ok) {\n          setPlaceSuggestions([]);\n          setCitySuggestions([]);\n          return;\n        }\n        const data = (await res.json()) as GeodataPlace[];\n        console.debug('[geodata] backend returned', Array.isArray(data) ? data.length : typeof data);\n        const arr = data || [];\n        // split results: city-like entries (city present, no street) vs address entries\n        const cities = arr.filter((p) => {\n          const hasCity = !!(p.city || p.name && !p.street && !p.house_number);\n          const isAddress = !!(p.house_number || p.street);\n          return hasCity && !isAddress;\n        });\n        const addresses = arr.filter((p) => !!(p.house_number || p.street));\n        setCitySuggestions(cities);\n        setPlaceSuggestions(addresses);\n      } catch (err) {\n        console.error(\"geodata fetch error\", err);\n        setPlaceSuggestions([]);\n        setCitySuggestions([]);\n      }\n    },\n    []\n  );\n\n  useEffect(() => {\n    const q = (form.address || form.city || \"\").trim();\n    if (searchTimer.current) window.clearTimeout(searchTimer.current);\n    searchTimer.current = window.setTimeout(() => {\n      const bias = form.city ? ` ${form.city}` : \"\";\n      fetchGeodata(`${q}${bias}`.trim());\n    }, 1000);\n    return () => {\n      if (searchTimer.current) window.clearTimeout(searchTimer.current);\n    };\n  }, [form.address, form.city, fetchGeodata]);\n\n  useEffect(() => {\n    const q = (form.region || \"\").trim();\n    if (searchTimer.current) window.clearTimeout(searchTimer.current);\n    searchTimer.current = window.setTimeout(async () => {\n      console.debug('[geodata] region lookup q=', q);\n      if (!q || q.length < 2) return setRegionSuggestions([]);\n      try {\n        const res = await fetch(\n          `/api/geodata/positionstack?q=${encodeURIComponent(q)}&limit=40`\n        );\n        if (!res.ok) return setRegionSuggestions([]);\n        const data = (await res.json()) as GeodataPlace[];\n        const seen = new Set<string>();\n        const arr: string[] = [];\n        const wantCountry = selectedCountryCode\n          ? selectedCountryCode.toUpperCase()\n          : null;\n        for (const p of data || []) {\n          const state = p.state || null;\n          const countryCode = getRawCountryCode(p.raw);\n          if (!state) continue;\n          if (wantCountry && countryCode && countryCode !== wantCountry) continue;\n          const s = String(state);\n          if (!seen.has(s)) {\n            seen.add(s);\n            arr.push(s);\n            if (arr.length >= 8) break;\n          }\n        }\n        setRegionSuggestions(arr);\n      } catch (err) {\n        console.error(\"region geodata error\", err);\n        setRegionSuggestions([]);\n      }\n    }, 1000);\n    return () => {\n      if (searchTimer.current) window.clearTimeout(searchTimer.current);\n    };\n  }, [form.region, selectedCountryCode]);\n\n  useEffect(() => {\n    const onDocClick = (e: MouseEvent) => {\n      if (!containerRef.current) return;\n      if (!containerRef.current.contains(e.target as Node)) {\n        setOpenCountry(false);\n        setOpenRegion(false);\n        setOpenCity(false);\n        setOpenAddress(false);\n      }\n    };\n    document.addEventListener(\"click\", onDocClick);\n    return () => document.removeEventListener(\"click\", onDocClick);\n  }, []);\n\n  const [initialPlan, setInitialPlan] = useState<\n    \"decouverte\" | \"essentiel\" | \"pro\"\n  >(\"decouverte\");\n  const [initLoading, setInitLoading] = useState(false);\n  const [completeLoading] = useState(false);\n  const [showUpgradeModal, setShowUpgradeModal] = useState(false);\n  const [upgradeMessage, setUpgradeMessage] = useState(\"\");\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(false);\n    if (form.password !== confirmPassword) {\n      setError(\"Les mots de passe ne correspondent pas.\");\n      return;\n    }\n    try {\n      if (initialPlan === \"decouverte\") {\n        setInitLoading(true);\n        const regRes = await fetch(`${API_URL}/auth/register`, {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          credentials: \"include\",\n          body: JSON.stringify({ ...form, plan: initialPlan }),\n        });\n        const regData = await regRes.json().catch(() => ({}));\n        if (!regRes.ok)\n          throw new Error(\n            regData?.message || regData?.error || \"Erreur lors de l'inscription\"\n          );\n\n        const loginRes = await fetch(`${API_URL}/auth/login`, {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          credentials: \"include\",\n          body: JSON.stringify({ email: form.email, password: form.password }),\n        });\n\n        if (loginRes.status === 402) {\n          const loginData = await loginRes.json().catch(() => ({}));\n          setUpgradeMessage(\n            loginData?.error || \"Votre compte nécessite un abonnement pour continuer.\"\n          );\n          setShowUpgradeModal(true);\n          setInitLoading(false);\n          return;\n        }\n\n        const loginData = await loginRes.json().catch(() => ({}));\n        if (!loginRes.ok)\n          throw new Error(\n            loginData?.message || loginData?.error || \"Erreur lors de la connexion\"\n          );\n\n        window.location.href = \"/\";\n        return;\n      }\n\n      setInitLoading(true);\n      const res = await fetch(`${API_URL}/auth/register-subscribe/init`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        credentials: \"include\",\n        body: JSON.stringify({ ...form, plan: initialPlan }),\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        throw new Error(data?.message || data?.error || \"Erreur lors de l’inscription\");\n      }\n      const endpoint = \"/api/subscriptions/create-checkout-with-token\";\n      const body: { plan: string; mode: \"direct\" | \"discovery\"; selectedPlan?: string; subscribeToken?: string } = { plan: initialPlan, mode: \"direct\", subscribeToken: data.subscribeToken };\n      const res2 = await fetch(endpoint, { method: \"POST\", headers: { \"Content-Type\": \"application/json\" }, body: JSON.stringify(body) });\n      const data2 = await res2.json().catch(() => ({}));\n      if (!res2.ok || !data2.url) throw new Error(data2.error || \"Impossible de créer la session de paiement\");\n      window.location.href = data2.url;\n    } catch (err: unknown) {\n      if (err instanceof Error) setError(err.message || \"Erreur lors de l’inscription\"); else setError(\"Erreur lors de l’inscription\");\n      setInitLoading(false);\n    } finally {\n      setInitLoading(false);\n    }\n  };\n\n  const selectCountry = (name: string) => {\n    updateForm({ country: name });\n    const found = countries.find((c) => c.name === name || (c.name && c.name.toLowerCase() === name.toLowerCase()));\n    setSelectedCountryCode(found && found.cca2 ? String(found.cca2).toUpperCase() : null);\n    setCountrySuggestions([]);\n    setOpenCountry(false);\n    applyAndFocus(\"region\", \"\");\n  };\n\n  const selectRegion = (r: string) => {\n    updateForm({ region: r });\n    setRegionSuggestions([]);\n    setOpenRegion(false);\n    applyAndFocus(\"city\", \"\");\n  };\n\n  const selectPlace = (p: GeodataPlace) => {\n    const house = p.house_number ? String(p.house_number).trim() : \"\";\n    const road = p.street ? String(p.street).trim() : \"\";\n    const streetPart = (house ? `${house} ${road}`.trim() : (road || \"\"));\n    const displayStreet = streetPart || p.name || \"\";\n    const userTyped = String(form.address || '').trim();\n    let composed = displayStreet;\n    if (!house) {\n      const m = userTyped.match(/^(\\d+)\\s+(.+)$/);\n      if (m && m[1]) {\n        const typedNum = m[1];\n        if (!displayStreet.startsWith(typedNum + ' ')) {\n          composed = `${typedNum} ${displayStreet}`.trim();\n        }\n      }\n    }\n\n    updateForm({\n      address: composed,\n      city: p.city || \"\",\n      postalCode: p.postcode || \"\",\n      region: p.state || \"\",\n      country: p.country || \"\",\n    });\n    (async () => {\n      try {\n        if (!p.postcode || !p.city || !p.house_number) {\n          const q = encodeURIComponent(p.name || displayStreet || \"\");\n          if (!q) return;\n          const res = await fetch(`/api/geodata/positionstack?q=${q}&limit=1`);\n          if (!res.ok) return;\n          const more = (await res.json()) as GeodataPlace[];\n          if (!more || more.length === 0) return;\n          const m = more[0];\n          const city2 = m.city || \"\";\n          const postcode2 = m.postcode || \"\";\n          const region2 = m.state || \"\";\n          const country2 = m.country || \"\";\n          const house2 = m.house_number || \"\";\n          const road2 = m.street || \"\";\n          const patch: Partial<FormType> = {};\n          if (!p.city && city2) patch.city = city2;\n          if (!p.postcode && postcode2) patch.postalCode = postcode2;\n          if (!p.state && region2) patch.region = region2;\n          if (!p.country && country2) patch.country = country2;\n          if (!house && house2) {\n            const primaryRoad = road || road2 || m.name || '';\n            patch.address = `${house2} ${primaryRoad}`.trim();\n          }\n          if (Object.keys(patch).length > 0) updateForm(patch);\n        }\n      } catch (err) {\n        console.error('selectPlace followup lookup error', err);\n      }\n    })();\n    setPlaceSuggestions([]);\n    setOpenAddress(false);\n    setTimeout(() => {\n      try {\n        const el = document.querySelector(`input[name=\"postalCode\"]`) as HTMLInputElement | null;\n        if (el) {\n          el.focus();\n          const len = el.value ? el.value.length : 0;\n          el.setSelectionRange(len, len);\n        }\n      } catch (err) {\n        console.error('focus postalCode error', err);\n      }\n    }, 0);\n  };\n\n  return (\n    <div ref={containerRef} className=\"h-screen flex items-center justify-center bg-gradient-to-r from-[#f7f4d7] to-[#a9ddf2] overflow-hidden\">\n      <form onSubmit={handleSubmit} className=\"bg-white rounded-2xl shadow-lg p-6 w-full max-w-xl md:max-w-2xl flex flex-col items-center max-h-[95vh] overflow-auto\">\n        <div className=\"w-20 h-20 mb-4\">\n          <img src=\"/imgs/LogoFrimousse.webp\" alt=\"Logo\" className=\"w-full h-full object-contain\" />\n        </div>\n        <h2 className=\"text-2xl font-bold mb-2 text-[#0b5566] text-center\">Inscription</h2>\n        <p className=\"mb-6 text-[#08323a] text-center\">Créez votre compte Frimousse</p>\n        {error && <div className=\"mb-4 text-red-600 w-full text-center\">{error}</div>}\n        {success && <div className=\"mb-4 text-[#0b5566] w-full text-center\">Inscription réussie. Redirection…</div>}\n\n        <label className=\"block mb-3 w-full text-left font-medium text-[#08323a]\">Nom\n          <input name=\"name\" value={form.name} onChange={handleChange} placeholder=\"Nom et prénom\" required className=\"mt-1 w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#a9ddf2]\" />\n        </label>\n\n        <label className=\"block mb-3 w-full text-left font-medium text-[#08323a]\">Email\n          <input name=\"email\" type=\"email\" value={form.email} onChange={handleChange}placeholder=\"Email\" required className=\"mt-1 w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#a9ddf2]\" />\n        </label>\n\n        <label className=\"block mb-3 w-full text-left font-medium text-[#08323a]\">Société / Crèche\n          <input name=\"centerName\" value={form.centerName} onChange={handleChange} placeholder=\"Nom de la crèche ou société\" className=\"mt-1 w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#a9ddf2]\" />\n        </label>\n        \n\n        <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 w-full mb-3\">\n           <label className=\"block text-left font-medium text-[#08323a]\">Adresse\n            <div className=\"relative\">\n              <input name=\"address\" value={form.address} onChange={handleChange} placeholder=\"Adresse \" className=\"mt-1 w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#a9ddf2]\" />\n              {openAddress && placeSuggestions.length > 0 && (\n                <ul className=\"absolute z-20 left-0 right-0 bg-white border mt-1 max-h-56 overflow-auto rounded shadow\">\n                      {placeSuggestions.map((p, idx) => {\n                    const summary = [p.house_number && `${p.house_number} ${p.street}`, p.street || p.name, p.postcode, p.state, p.country].filter(Boolean).join(', ');\n                    const label = p.name || (p.house_number ? `${p.house_number} ${p.street}` : p.street || '');\n                    return (\n                      <li key={idx} role=\"button\" tabIndex={0} onClick={() => { selectPlace(p); }} className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer\">\n                        <div className=\"text-sm font-medium\">{label}</div>\n                        <div className=\"text-xs text-gray-500\">{summary}</div>\n                      </li>\n                    );\n                  })}\n                </ul>\n              )}\n            </div>\n          </label>\n          <label className=\"block text-left font-medium text-[#08323a]\">Pays\n            <div className=\"relative\">\n              <input name=\"country\" value={form.country} onChange={handleChange} placeholder=\"Pays\" autoComplete=\"off\" className=\"mt-1 w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#a9ddf2]\" />\n              {openCountry && countrySuggestions.length > 0 && (\n                <ul className=\"absolute z-20 left-0 right-0 bg-white border mt-1 max-h-44 overflow-auto rounded shadow\">\n                  {countrySuggestions.map((c, idx) => (\n                    <li key={idx} role=\"button\" tabIndex={0} onClick={() => selectCountry(c.name)} className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer\">{c.name}</li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </label>\n\n          <label className=\"block text-left font-medium text-[#08323a]\">Région\n            <div className=\"relative\">\n              <input name=\"region\" value={form.region} onChange={handleChange} placeholder=\"Région / Département\" autoComplete=\"off\" className=\"mt-1 w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#a9ddf2]\" />\n              {openRegion && regionSuggestions.length > 0 && (\n                <ul className=\"absolute z-20 left-0 right-0 bg-white border mt-1 max-h-44 overflow-auto rounded shadow\">\n                  {regionSuggestions.map((r, idx) => (\n                    <li key={idx} role=\"button\" tabIndex={0} onClick={() => selectRegion(r)} className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer\">{r}</li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </label>\n\n         \n          <label className=\"block text-left font-medium text-[#08323a]\">Ville \n            <div className=\"relative\">\n              <input name=\"city\" value={form.city} onChange={handleChange} placeholder=\"Ville\" autoComplete=\"off\" className=\"mt-1 w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#a9ddf2]\" />\n              {openCity && citySuggestions.length > 0 && (\n                <ul className=\"absolute z-20 left-0 right-0 bg-white border mt-1 max-h-56 overflow-auto rounded shadow\">\n                  {citySuggestions.map((p, idx) => {\n                    const display = p.city || p.name || '';\n                    const summary = [p.postcode, p.state, p.country].filter(Boolean).join(', ');\n                    return (\n                      <li key={idx} role=\"button\" tabIndex={0} onClick={() => {\n                        const patch: Partial<FormType> = { city: display };\n                        if (p.postcode) patch.postalCode = String(p.postcode);\n                        if (p.state) patch.region = String(p.state);\n                        if (p.country) patch.country = String(p.country);\n                        updateForm(patch);\n                        setCitySuggestions([]);\n                        setOpenCity(false);\n                        applyAndFocus('address', '');\n                      }} className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer\">\n                        <div className=\"text-sm font-medium\">{display}</div>\n                        <div className=\"text-xs text-gray-500\">{summary}</div>\n                      </li>\n                    );\n                  })}\n                </ul>\n              )}\n            </div>\n          </label>\n        </div>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 w-full mb-3\">\n          <label className=\"block text-left font-medium text-[#08323a]\">Code postal\n            <input name=\"postalCode\" value={form.postalCode} onChange={handleChange} placeholder=\"Code postal\" className=\"mt-1 w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#a9ddf2]\" />\n          </label>\n         \n        </div>\n\n        <label className=\"block mb-3 w-full text-left font-medium text-gray-700\">Mot de passe\n          <div className=\"relative\">\n            <input name=\"password\" type={showPassword ? \"text\" : \"password\"} value={form.password} onChange={handleChange} placeholder=\"Mot de passe\" required className=\"mt-1 w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#a9ddf2] pr-10\" />\n            <button type=\"button\" tabIndex={-1} aria-label={showPassword ? \"Masquer le mot de passe\" : \"Afficher le mot de passe\"} className=\"absolute right-2 top-1/2 -translate-y-1/2 text-gray-400 hover:text-[#0b5566] text-lg focus:outline-none\" onClick={() => setShowPassword(v => !v)}>{showPassword ? '🙈' : '👁️'}</button>\n          </div>\n        </label>\n\n        <label className=\"block mb-3 w-full text-left font-medium text-gray-700\">Confirmer le mot de passe\n          <div className=\"relative\">\n            <input name=\"confirmPassword\" type={showConfirm ? \"text\" : \"password\"} value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} placeholder=\"Confirmer le mot de passe\" required className=\"mt-1 w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#a9ddf2] pr-10\" />\n            <button type=\"button\" tabIndex={-1} aria-label={showConfirm ? \"Masquer le mot de passe\" : \"Afficher le mot de passe\"} className=\"absolute right-2 top-1/2 -translate-y-1/2 text-gray-400 hover:text-[#0b5566] text-lg focus:outline-none\" onClick={() => setShowConfirm(v => !v)}>{showConfirm ? '🙈' : '👁️'}</button>\n          </div>\n        </label>\n\n        <div className=\"w-full mb-4 mt-6\">\n          <label className=\"block mb-2 font-medium text-[#08323a]\">Offres</label>\n          <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2\">\n            <button type=\"button\" onClick={() => setInitialPlan('decouverte')} className={`p-3 rounded-lg border text-sm focus:outline-none flex flex-col items-center text-center min-h-[140px] ${initialPlan === 'decouverte' ? 'border-[#0b5566] bg-[#f7f4d7]' : 'border-gray-200 bg-white hover:shadow-sm'}`}>\n              <div><div className=\"font-semibold text-[#0b5566]\">Découverte</div><div className=\"text-xs text-gray-600\">Essai 15 jours</div></div>\n              <div className=\"mt-3 text-xs text-gray-600\">Tester Frimousse sans engagement</div>\n              <div className=\"mt-auto text-base font-bold text-[#0b5566]\">0€</div>\n            </button>\n\n            <button type=\"button\" onClick={() => setInitialPlan('essentiel')} className={`p-3 rounded-lg border text-sm focus:outline-none flex flex-col items-center text-center min-h-[140px] ${initialPlan === 'essentiel' ? 'border-[#0b5566] bg-white shadow' : 'border-gray-200 bg-white hover:shadow-sm'}`}>\n              <div><div className=\"font-semibold text-[#0b5566]\">Essentiel</div><div className=\"text-xs text-gray-600\">Pour petites structures</div></div>\n              <div className=\"mt-3 text-xs text-gray-600\">Jusqu’à 10 enfants, exports et notifications</div>\n              <div className=\"mt-auto text-base font-bold text-[#0b5566]\">29,99€ <span className=\"text-xs text-gray-500\">/ mois</span></div>\n            </button>\n\n            <button type=\"button\" onClick={() => setInitialPlan('pro')} className={`p-3 rounded-lg border text-sm focus:outline-none flex flex-col items-center text-center min-h-[140px] ${initialPlan === 'pro' ? 'border-[#0b5566] bg-white shadow' : 'border-gray-200 bg-white hover:shadow-sm'}`}>\n              <div><div className=\"font-semibold text-[#0b5566]\">Pro</div><div className=\"text-xs text-gray-600\">Pour structures avancées</div></div>\n              <div className=\"mt-3 text-xs text-gray-600\">Enfants illimités, Assistant IA </div>\n              <div className=\"mt-auto text-base font-bold text-[#0b5566]\">59,99€ <span className=\"text-xs text-gray-500\">/ mois</span></div>\n            </button>\n          </div>\n        </div>\n\n        {(initialPlan === 'essentiel' || initialPlan === 'pro') && (\n          <div className=\"w-full max-w-xl md:max-w-2xl mt-2 px-6\">\n            <div className=\"rounded-md bg-yellow-100 border-l-4 border-yellow-400 p-3 text-sm text-yellow-800\">\n              Les abonnements payant ne sont pas encore disponibles veuillez essayer la version gratuite sans engagement — Contactez-nous pour plus de renseignements.\n            </div>\n          </div>\n        )}\n\n        <button type=\"submit\" disabled={initLoading || completeLoading || initialPlan !== 'decouverte'} title={initialPlan !== 'decouverte' ? 'Les abonnements payants ne sont pas encore disponibles. Contactez-nous pour plus d’informations.' : undefined} aria-disabled={initialPlan !== 'decouverte' ? 'true' : 'false'} className={`w-full py-2 rounded-full font-semibold transition focus:outline-none focus:ring-2 focus:ring-[#a9ddf2] ${initLoading || completeLoading || initialPlan !== 'decouverte' ? 'bg-gray-300 text-gray-600 cursor-not-allowed' : 'bg-[#0b5566] text-white hover:opacity-95'}`}>\n          {initLoading || completeLoading ? 'Patientez…' : (initialPlan === 'decouverte' ? 'S’inscrire' : 'S’inscrire et payer')}\n        </button>\n\n        <div className=\"mt-4 text-sm text-[#08323a]\">Déjà un compte ? <a href=\"/login\" className=\"text-[#0b5566] hover:underline\">Se connecter</a></div>\n\n      </form>\n\n      {showUpgradeModal && (\n        <div className=\"fixed inset-0 bg-black/40 flex items-center justify-center z-50 px-4\">\n          <div role=\"dialog\" aria-modal=\"true\" className=\"bg-white rounded-lg p-6 max-w-md w-full shadow-lg\">\n            <h3 className=\"text-lg font-bold text-[#0b5566] mb-2\">Abonnement requis</h3>\n            <p className=\"text-sm text-gray-700 mb-4\">{upgradeMessage || 'Cette action nécessite un abonnement. Passez à un plan supérieur pour continuer.'}</p>\n            <div className=\"flex justify-end gap-3\">\n              <button onClick={() => { window.location.href = '/pricing'; }} className=\"px-4 py-2 bg-[#0b5566] text-white rounded-md\">Aller aux offres</button>\n              <button onClick={() => setShowUpgradeModal(false)} className=\"px-4 py-2 border rounded-md\">Fermer</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["API_URL","RegisterPage","getRawCountryCode","raw","r","cc","e","form","setForm","useState","confirmPassword","setConfirmPassword","showPassword","setShowPassword","showConfirm","setShowConfirm","error","setError","success","setSuccess","countries","setCountries","countrySuggestions","setCountrySuggestions","selectedCountryCode","setSelectedCountryCode","regionSuggestions","setRegionSuggestions","placeSuggestions","setPlaceSuggestions","citySuggestions","setCitySuggestions","openCountry","setOpenCountry","openRegion","setOpenRegion","openCity","setOpenCity","openAddress","setOpenAddress","searchTimer","useRef","containerRef","updateForm","patch","prev","applyAndFocus","name","value","el","len","err","handleChange","useEffect","res","data","q","matches","c","exact","matching","starts","fetchGeodata","useCallback","query","arr","cities","p","hasCity","isAddress","addresses","bias","seen","wantCountry","state","countryCode","s","onDocClick","initialPlan","setInitialPlan","initLoading","setInitLoading","completeLoading","showUpgradeModal","setShowUpgradeModal","upgradeMessage","setUpgradeMessage","handleSubmit","regRes","regData","loginRes","loginData","endpoint","body","res2","data2","selectCountry","found","selectRegion","selectPlace","house","road","displayStreet","userTyped","composed","m","typedNum","more","city2","postcode2","region2","country2","house2","road2","primaryRoad","jsx","jsxs","idx","summary","label","display","v"],"mappings":"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"}